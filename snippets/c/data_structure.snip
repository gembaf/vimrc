
#===========================================================
# スタック
#===========================================================

snippet     stack
abbr        stack
  #define STACK_SIZE n

  Data stack[STACK_SIZE];
  int stack_top = 0;

  void push(Data val)
  {
    if ( stack_top == STACK_SIZE ) { puts("stack overflow"); return; }
    stack[stack_top++] = val;
  }

  Data pop()
  {
    if ( stack_top == 0 ) { puts("stack underflow"); return -1; }
    return stack[--stack_top];
  }

#===========================================================
# キュー
#===========================================================

snippet     queue
abbr        queue
  #define QUEUE_SIZE n+1

  Data queue[QUEUE_SIZE];
  int queue_first = 0;
  int queue_last = 0;

  void enqueue(Data val)
  {
    if( (queue_last+1)%QUEUE_SIZE == queue_first ) {
      puts("queue filled");
      return;
    }
    queue[queue_last] = val;
    queue_last = (queue_last+1) % QUEUE_SIZE;
  }

  Data dequeue()
  {
    int t;

    if ( queue_first == queue_last ) { puts("empty"); return -1; }
    t = queue[queue_first];
    queue_first = (queue_first+1) % QUEUE_SIZE;
    return t;
  }



